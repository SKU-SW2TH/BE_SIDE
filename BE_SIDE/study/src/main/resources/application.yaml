spring:
  datasource:
    url: jdbc:mariadb://localhost:3306/sw
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: org.mariadb.jdbc.Driver

  jpa:
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
                show_sql: true #얘는 콘솔에 찍는건데 이건 아래에서 debug 해놓은거로 로그에 남겨놓는게 좋기때문에 주석 처리했다
                format_sql: true
                default_batch_fetch_size: 100
    database-platform: org.hibernate.dialect.MariaDBDialect

  servlet:
    multipart:
      max-file-size: 5MB
      max-request-size: 10MB # 요청의 최대 크기도 동일하게 20MB로 지정 (선택 사항)

  data:
    redis: # spring.data.redis로 변경
      host: localhost
      port: 6379

  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          timeout: 5000
          starttls:
            enable: true
#    auth-code-expiration-millis: 1800000


#jwt
jwt:
  secret: c3ByaW5nLWJvb3Qtc2VjdXJpdHktand0LXR1dG9yaWFsLWppd29vbi1zcHJpbmctYm9vdC1zZWN1cml0eS1qd3QtdHV0b3JpYWwK

logging:
  level:
    org.hibernate.sql: debug
#    org.hibernate.type: trace #파라미터 바인딩되는 파라미터까지 볼 수 있게 해줌


springdoc:
  swagger-ui:
    path: /api-test  # swagger-ui 접근 경로에 대한 별칭, 해당 주소로 접속해도 http://localhost:8080/swagger-ui/index.html로 리다이렉션 됨.

    groups-order: DESC # path, query, body, response 순으로 출력

    tags-sorter: alpha # 태그를 알파벳 순으로 정렬

    operations-sorter: method  # delete - get - patch - post - put 순으로 정렬, alpha를 사용하면 알파벳 순으로 정렬 가능

  paths-to-match:
    - /api/** # swagger-ui에 표시할 api의 엔드포인트 패턴