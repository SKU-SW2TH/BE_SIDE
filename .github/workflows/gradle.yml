name: Java CI with Gradle

on:
  push:
    branches: [ "test" ]
  pull_request:
    branches: [ "test" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582
      with:
        gradle-version: '8.10.2'  # 원하는 Gradle 버전 지정

    - name: Build with Gradle
      run: |
          cd BE_SIDE/study      
          ./gradlew build  # gradlew를 통해 Gradle 빌드 실행 (wrapper 사용)

  dependency-submission:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4  # 코드 리포지토리를 체크아웃합니다.
  
    # JDK 17 설정
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

    # Gradle 설정
      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          gradle-version: '8.10.2'  # 원하는 Gradle 버전 지정
  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write

    steps:
      # 1. 코드 리포지토리를 체크아웃
      - uses: actions/checkout@v4

      # 2. JDK 17 설정
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # 3. SSH 에이전트 설정
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.AWS_SSH_PRIVATE_KEY }}

      # 4. JAR 파일을 EC2로 복사
      - name: Copy files to EC2
        env:
          EC2_IP: ${{ secrets.EC2_IP }}  # GitHub Secrets에서 EC2 IP를 가져옵니다.
        run: |
          scp -o StrictHostKeyChecking=no ./BE_SIDE/study/build/libs/study-0.0.1-SNAPSHOT.jar ubuntu@${{ env.EC2_IP }}:/home/ubuntu/study-0.0.1-SNAPSHOT.jar

      # 5. EC2에서 애플리케이션 실행
      - name: SSH into EC2 and run the application
        env:
          EC2_IP: ${{ secrets.EC2_IP }}
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@${{ env.EC2_IP }} << 'EOF'
            nohup java -jar /home/ubuntu/study-0.0.1-SNAPSHOT.jar > app.log 2>&1 &
          EOF

